(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{361:function(t,a,s){t.exports=s.p+"assets/img/file_log.40ce4a14.png"},362:function(t,a,s){t.exports=s.p+"assets/img/before_upload.b7df80b2.jpg"},363:function(t,a,s){t.exports=s.p+"assets/img/after_upload.16dfbcfe.jpg"},380:function(t,a,s){"use strict";s.r(a);var n=s(45),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"前端文件上传"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端文件上传"}},[t._v("#")]),t._v(" 前端文件上传")]),t._v(" "),n("h3",{attrs:{id:"_1、原始上传方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、原始上传方式"}},[t._v("#")]),t._v(" 1、原始上传方式")]),t._v(" "),n("p",[t._v("W3C的规范中没有提供直接打开文件选择器的接口，必须由浏览器用户手动点击 "),n("kbd",[n("strong",[t._v("按钮")])]),t._v(" 触发，这是出于安全考虑，防止恶意网站未经用户同意就读取其本地的文件信息。那么这个 "),n("kbd",[n("strong",[t._v("按钮")])]),t._v(" 就是 "),n("strong",[n("code",[t._v('<input type="file">')])]),t._v("，点击这个按钮可以调出操作系统的文件选择器，选择文件点击确定后可以拿到关于文件的"),n("strong",[t._v("信息")]),t._v("，然后通过表单提交的形式上传到后台，这是目前前端（主要是Web端）处理文件上传的原始方法，看起来好像很简单，其实里面有一些细节需要注意。首先看一下实现这一功能的示例代码：")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("enctype")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("multipart/form-data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("submit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("提交"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("以上代码中表单的属性 "),n("code",[t._v("action")]),t._v(" 要填写在提交表单时要跳转的后端页面地址，"),n("code",[t._v("enctype")]),t._v(" 属性要设置为 "),n("code",[t._v("multipart/form-data")]),t._v("（这是设置请求头中的 "),n("code",[t._v("content-type")]),t._v(" 字段，以便后台识别传输的数据类型），这样一段代码就可以实现简单的文件的上传功能。当然这种方法的缺点也很多，它基本只在前后端不分离（前端页面由后台驱动）的开发模式中使用，每次提交表单后都会刷新并跳转页面，显然在目前前后端分离的流行趋势下，特别是使用了 "),n("code",[t._v("Vue")]),t._v("、"),n("code",[t._v("React")]),t._v("等前端框架进行开发时基本不会用到这种原始方法。")]),t._v(" "),n("h3",{attrs:{id:"_2、探究文件信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、探究文件信息"}},[t._v("#")]),t._v(" 2、探究文件信息")]),t._v(" "),n("p",[t._v("虽然原始的文件上传方法不经常使用，但从根本出发还是有一些疑惑需要解决，比如上面提到的关于文件的"),n("strong",[t._v("信息")]),t._v("到底是什么，文件不同于文本数据让人容易理解，如果表单中只是包含文本信息，那我们能很确定的知道传输到后台的数据是什么，但是一个文件它有文件名、文件大小等信息，还有最关键的文件内容，到底传输给后台的文件包含了哪些信息呢？通过一段代码来看一下：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("    window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取上面html代码中的文件上传按钮的DOM节点")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" files "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2种写法相同")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(files.files);")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("上面的代码会在选择文件之后打印出关于文件的信息，可以注意到 "),n("code",[t._v("e.target")]),t._v(" 指向的就是那个选择文件的按钮，上传到后台的文件信息就存储在其 "),n("code",[t._v("files")]),t._v(" 属性中，这里我们选择一张图片进行测试，以下是打印结果：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(361),alt:"文件信息"}})]),t._v(" "),n("p",[t._v("可以看到 "),n("code",[t._v("files")]),t._v(" 属性是一个数组类型，其中的每个元素是 "),n("code",[t._v("File")]),t._v(" 对象的实例，绿色框标出来的内容就包含了文件的名称、类型、大小等信息，但是其文件内容却是不可见的，下面是MDN中对 "),n("code",[t._v("File")]),t._v(" 对象来源的描述：")]),t._v(" "),n("blockquote",[n("p",[t._v("通常情况下， File 对象是来自用户在一个 "),n("code",[t._v("<input>")]),t._v(" 元素上选择文件后返回的 FileList 对象,也可以是来自由拖放操作生成的 DataTransfer 对象，或者来自 HTMLCanvasElement 上的 mozGetAsFile() API。")])]),t._v(" "),n("p",[t._v("当然也可以通过 "),n("code",[t._v("new")]),t._v(" 关键字创建一个 "),n("code",[t._v("File")]),t._v(" 实例。那么到目前为止，我们知道用原始的表单提交方式上传的文件是一个 "),n("code",[t._v("File")]),t._v(" 对象的实例，但是关于为什么 "),n("code",[t._v("File")]),t._v(" 实例的文件内容不可见，以及这个 "),n("code",[t._v("File")]),t._v(" 实例传输到后台时后台是怎样解析的等问题，还有待进一步研究。对于 "),n("code",[t._v("File")]),t._v(" 对象的更多信息可以查阅"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/File",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN的文档"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_3、主流文件上传方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、主流文件上传方式"}},[t._v("#")]),t._v(" 3、主流文件上传方式")]),t._v(" "),n("p",[t._v("目前前后端分离的开发模式下的数据交换离不开 "),n("code",[t._v("Ajax")]),t._v(" 的加持(当然现在也有新增的 "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("Fetch API")]),n("OutboundLink")],1),t._v(")，基于 "),n("code",[t._v("Ajax")]),t._v(" 封装的请求库也是有很多，比较经常使用的是 "),n("code",[t._v("Axios")]),t._v("。在这种异步请求和局部刷新页面的模式下，对于文件的上传通常是使用 "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("FormData")]),n("OutboundLink")],1),t._v(" 对象来完成的。简单示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取上面html代码中的文件上传按钮的DOM节点")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" files "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建FormData对象")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" formData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FormData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   formData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fileName'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后将formData作为参数通过接口传递给后台就行了")]),t._v("\n")])])]),n("p",[t._v("上面的代码展示了如何通过 "),n("code",[t._v("FormData")]),t._v(" 对象的 "),n("code",[t._v("append()")]),t._v(" 方法追加一个属性来存储文件信息，然后就可以通过 "),n("code",[t._v("Ajax")]),t._v(" 将文件信息传递给后台，不过应该注意的是追加的文件依然是一个 "),n("code",[t._v("File")]),t._v(" 实例，依然来自 "),n("code",[t._v('<input type="file">')]),t._v(" 这个按钮的 "),n("code",[t._v("files")]),t._v(" 属性中。\n在这里针对图片上传有一个常见的需求，是要求在图片上传时能在前端预览，这时就要用到 "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("FileReader")]),n("OutboundLink")],1),t._v(" 对象了，简单示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 初始src是占位图 --\x3e")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token style-attr"}},[n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),n("span",{pre:!0,attrs:{class:"token style language-css"}},[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("img"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://www.wenjiangs.com/wp-content/uploads/2019/04/350x200.png"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("   window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" files "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" img "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#img'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fileReader "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要将File对象转换为Blob对象")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" blob "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Blob")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将blob数据进行base64编码")]),t._v("\n           fileReader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readAsDataURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n           fileReader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将得到的base64数据替换<img>标签的src属性就能实现预览")]),t._v("\n               img"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n")])])]),n("p",[t._v("上面的代码使用了 "),n("code",[t._v("FileReader")]),t._v(" 对象的 "),n("code",[t._v("readAsDataURL()")]),t._v(" 方法将图片信息（Blob类型）进行base64编码，得到的结果可以直接替换 "),n("code",[t._v("<img>")]),t._v(" 标签的 "),n("code",[t._v("src")]),t._v(" 属性。"),n("code",[t._v("Blob")]),t._v(" 对象是 "),n("code",[t._v("File")]),t._v(" 对象的超类，更多信息请见"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN文档"),n("OutboundLink")],1),t._v("。上面代码的测试结果如下:\n"),n("img",{attrs:{src:s(362),alt:"上传前占位图"}}),t._v(" "),n("img",{attrs:{src:s(363),alt:"上传后预览图"}})]),t._v(" "),n("h3",{attrs:{id:"_4、小程序文件上传"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、小程序文件上传"}},[t._v("#")]),t._v(" 4、小程序文件上传")]),t._v(" "),n("p",[t._v("接触到小程序开发后（主要是微信小程序和支付宝小程序），发现在小程序中所有浏览器的 "),n("code",[t._v("API")]),t._v(" 都不能使用，只能用小程序提供的 "),n("code",[t._v("API")]),t._v("，所以小程序自然是不支持 "),n("code",[t._v("FormData")]),t._v(" 对象的，也不能对 "),n("code",[t._v("<input>")]),t._v(" 标签设置 "),n("code",[t._v('type="file"')]),t._v("，但它们有自己的接口解决文件上传的问题，以微信小程序为例，它提供了 "),n("code",[t._v("wx.chooseMessageFile()")]),t._v("来从客户端会话（微信的会话）中选择文件，还有专门的图片选择接口 "),n("code",[t._v("wx.chooseImage()")]),t._v("来调出手机的相册或者进行拍照，而"),n("code",[t._v("wx.uploadFile()")]),t._v(" 接口则是实现将选择的文件进行上传的功能，图片上传的官方示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("    wx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("chooseImage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tempFilePaths "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tempFilePaths\n            wx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uploadFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                url"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://example.weixin.qq.com/upload'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//仅为示例，非真实的接口地址")]),t._v("\n                filePath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" tempFilePaths"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里在传输时会根据文件的临时地址将文件信息转成file类型")]),t._v("\n                name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                formData"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do something")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("上面代码中选择图片的成功回调参数包含图片的信息，其中 "),n("code",[t._v("tempFilePaths")]),t._v(" 属性是保存了所选图片的临时地址的数组（可以设置选择多张图片），至于图片的预览小程序也有封装好的接口： "),n("code",[t._v("wx.previewImage()")]),t._v("，可以看到小程序对于文件的操作进行了很好的封装，微信小程序的"),n("code",[t._v("API")]),t._v("中甚至有一整个关于文件操作的  模块。更多信息请见"),n("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("微信开发者文档"),n("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);a.default=e.exports}}]);